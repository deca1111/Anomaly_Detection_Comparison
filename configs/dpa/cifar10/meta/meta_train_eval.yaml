#=========================== CONFIG FOR TRAINING ===========================

verbose: True
#random_seed: 4343
finetune_from:

#checkpoint_root:
#log_root:

#--------------------- Hyperparameters of training  ------------------------------

max_image_res: 32
initial_image_res: 32
image_dim: 3

latent_res: 1
#latent_dim:

trns_iter: 0
stab_iter: 20000
iters_per_res: {}
val_iter: 1000
log_iter: 10
image_sample_iter: 1000
early_stopping_patience: 3
early_stopping_min_delta: 0.001

#--------------------- Hyperparameters of optimizers ---------------------------

adam_kwargs:
#  lr:

batch_sizes:
  32: 128

#--------------------- Hyperparameters of dataset  ------------------------------

train_dataset:
  dataset_type: cifar10
  dataset_kwargs:
    split: train
    root: ./data/data/cifar10
  #  target_indexes_path: ./data/data/info/folds/cifar/0/0/train.npy
  transform_kwargs: {}

val_dataset:
  dataset_type: cifar10
  dataset_kwargs:
    root: ./data/data/cifar10
  #  target_indexes_path: ./data/data/info/folds/cifar/0/0/train.npy
    split: train
  transform_kwargs: {}

#--------------------- Hyperparameters of models  ------------------------------

enc:
  type: residual18
  kwargs:
#    inner_dims: [64, 64, 64, 64]

dec:
  type: residual18
  kwargs:
#    inner_dims: [64, 64, 64, 64]

#--------------------- Hyperparameters of loss function ---------------------------


image_rec_loss:
  loss_type: relative_perceptual_L1
  loss_kwargs:
    weights_per_resolution:
      32:
        img_weight: 0
        feature_weights:
#          r42: 1
    use_smooth_pg: False


#=========================== CONFIG FOR EVALUATION ===========================

#results_root:

test_batch_size: 32

#test_model_path: ./data/checkpoint/debug/exp_2/anomaly_detection.tar

test_datasets:
  normal:
    dataset_type: cifar10
    dataset_kwargs:
      root: ./data/data/cifar10
#      split: train
#      target_indexes_path:
    transform_kwargs: {}

  anomaly:
    dataset_type: cifar10
    dataset_kwargs:
      root: ./data/data/cifar10
#      split: train
#      target_indexes_path:
    transform_kwargs: {}


